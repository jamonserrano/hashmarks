!function(e,t){if("function"==typeof define&&define.amd)define(["module","exports"],t);else if("undefined"!=typeof exports)t(module,exports);else{var n={exports:{}};t(n,n.exports),e.Scrollmarks=n.exports}}(this,function(e,t){"use strict";function n(e){!function(e){var t=E.get(e);t&&t.helper&&document.body.removeChild(t.helper)}(e);var t=E.delete(e);return E.size||r(),t}function o(){!k&&E.size&&(window.addEventListener("scroll",i,A),window.addEventListener("resize",f,A),k=window.requestAnimationFrame(u))}function r(){k&&(window.cancelAnimationFrame(k),window.removeEventListener("scroll",i,A),window.removeEventListener("resize",f,A),T())}function i(){window.requestAnimationFrame(function(){return P=!0})}function f(){window.requestAnimationFrame(function(){return j=!0})}function u(){if(k=window.requestAnimationFrame(u),H===x.resizeThrottle){if(j)p(a),j=!1;else{var e=document.body.scrollHeight;q!==e&&(p(a),q=e)}H=1}else H++;z===x.scrollThrottle?(P&&(!function(){var e=[],t=window.pageYOffset;L=C<t?"down":"up",E.forEach(function(n){var o=n.direction;if(null!==n.element.offsetParent&&function(e,t){return!e||e===(t||L)}(o)){var r=n.triggerPoint;C<r==r<=t&&e.push(n)}}),e.length&&function(e){e.sort("down"===L?c:l),e.forEach(s)}(e);C=t}(),P=!1),z=1):z++}function s(e){var t=e.once;e.callback(L,e),t&&n(e.key)}function c(e,t){return e.triggerPoint-t.triggerPoint}function l(e,t){return t.triggerPoint-e.triggerPoint}function a(){E.forEach(d)}function d(e){var t=e.computedOffset,n=h(t)?t(e.element):t;if(!m(n))throw new TypeError("Offset function must return a number, got "+n+" instead");e.triggerPoint=window.pageYOffset+e.element.getBoundingClientRect().top-n,e.debug&&function(e){var t=e.helper;if(!t){(t=document.createElement("div")).className="scrollmarks-helper";var n={background:"rgba(104,207,147,0.5)",borderTop:"1px solid #333",color:"#333",font:"14px monospace",left:"0",minHeight:"20px",padding:"0 3px",position:"absolute",width:"100%"};Object.keys(n).forEach(function(e){return t.style[e]=n[e]}),e.helper=t,document.body.appendChild(t)}t.style.top=e.triggerPoint+"px",t.innerHTML="offset: "+e.offset+", computedOffset: "+(h(e.computedOffset)?e.computedOffset(e.element):e.computedOffset)+", triggerPoint: "+e.triggerPoint+"px"}(e)}function p(e){var t=x.idleTimeout;0===t?e():M?window.requestIdleCallback(e,{timeout:t}):window.setTimeout(e,0)}function m(e){return"number"==typeof e}function w(e){return"string"==typeof e}function h(e){return"function"==typeof e}function g(e){return void 0===e}function v(e){return"boolean"==typeof e}function b(e,t,n,o){return""+e+(e?" parameter":"Parameter")+" '"+t+"' must be "+n+", got "+o+" instead"}function T(){k=0,C=0,q=document.body.scrollHeight,P=!1,j=!1,y()}function y(){z=1,H=1}Object.defineProperty(t,"__esModule",{value:!0});/**
  * @license
  * Scrollmarks 1.0.1
  * Copyright (c) 2017 Viktor Honti
  * Licensed under the MIT License.
  * https://github.com/jamonserrano/scrollmarks
  */
var E=window.Map?new Map:Object.defineProperties(Object.create(null),{delete:{value:function(e){return this.has(e)&&delete this[e]}},forEach:{value:function(e){var t=this;Object.keys(this).forEach(function(n){return e(t[n],n,t)})}},get:{value:function(e){return this[e]}},has:{value:function(e){return!g(this[e])}},set:{value:function(e,t){return this[e]=t,this}},size:{get:function(){return Object.keys(this).length}}}),O=0,x={scrollThrottle:10,resizeThrottle:30,idleTimeout:100},k=void 0,P=void 0,z=void 0,C=void 0,L=void 0,j=void 0,H=void 0,q=void 0;T();var M=Boolean(window.requestIdleCallback),A=!1;window.addEventListener("test",null,{get passive(){A={passive:!0}}}),t.default={add:function(e){var t=e.element,n=e.callback,r=e.offset,i=e.direction,f=e.once,u=e.debug;if(!(t instanceof HTMLElement))throw new TypeError(b("","element","an HTML Element",t));if(!h(n))throw new TypeError(b("","callback","a function",n));if(g(r))e.computedOffset=0;else if(m(r)||h(r))e.computedOffset=r;else if(w(r)&&"%"===r.slice(-1))e.computedOffset=function(){return window.innerHeight*parseInt(r)/100};else{if(!w(r)||"px"!==r.slice(-2))throw new TypeError(b("Optional","offset","a number, px, %, or a function",r));e.computedOffset=parseInt(r)}if(!g(i)&&"up"!==i&&"down"!==i)throw new TypeError(b("Optional","direction","'up' or 'down'",i));if(!g(f)&&!v(f))throw new TypeError(b("Optional","once","boolean",f));if(!g(u)&&!v(u))throw new TypeError(b("Optional","debug","boolean",u));d(e);var s=O++;return e.key=s,E.set(s,e),k||o(),s},remove:n,start:o,stop:r,refresh:function(e){if(g(e))p(a);else{if(!E.has(e))throw new ReferenceError("Could not refresh scrollmark '"+e+"', mark doesn't exist");p(function(){return d(E.get(e))})}},config:function(e){if(g(e))return{scrollThrottle:x.scrollThrottle,resizeThrottle:x.resizeThrottle,idleTimeout:x.idleTimeout};Object.keys(e).forEach(function(t){return function(e,t){if(-1===["scrollThrottle","resizeThrottle","idleTimeout"].indexOf(e))throw new ReferenceError("Invalid config parameter: '"+e+"'");var n="idleTimeout"===e?0:1;if(!m(t))throw new TypeError(b("Config",e,"a number",t));if(t<n)throw new RangeError(b("Config",e,"at least "+n,t));x[e]=t}(t,e[t])}),k&&y()}},e.exports=t.default});